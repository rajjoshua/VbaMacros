Sub ExtractAndValidateApprovers()

    Dim OlMail As Outlook.MailItem
    Dim objAttachment As Outlook.Attachment
    Dim WordDoc As Object
    Dim WordApp As Object
    Dim tbl As Object, row As Object
    Dim ApproversInWord As Collection
    Dim ApproversInMail As Collection
    Dim EmbeddedMail As Outlook.MailItem
    Dim FirstLines As String
    Dim LineArray() As String
    Dim MismatchedNames As String

    ' Initialize collections
    Set ApproversInWord = New Collection
    Set ApproversInMail = New Collection

    ' Get the selected mail
    Set OlMail = Application.ActiveExplorer.Selection.Item(1)

    ' Extract Approvers from Word Attachment
    If Not OlMail Is Nothing Then
        For Each objAttachment In OlMail.Attachments
            If InStr(objAttachment.FileName, ".doc") > 0 Then
                ' Temporarily save the attachment
                objAttachment.SaveAsFile Environ("Temp") & "\" & objAttachment.FileName

                ' Open the Word document
                Set WordApp = GetObject(, "Word.Application")
                If WordApp Is Nothing Then Set WordApp = CreateObject("Word.Application")

                Set WordDoc = WordApp.Documents.Open(Environ("Temp") & "\" & objAttachment.FileName)
                WordApp.Visible = False

                If WordDoc.Tables.Count >= 3 Then
                    Set tbl = WordDoc.Tables(3)
                    For Each row In tbl.Rows
                        If InStr(row.Cells(5).Range.Text, "X") > 0 Then
                            ApproversInWord.Add ExtractName(Trim(row.Cells(1).Range.Text))
                        End If
                    Next row
                End If

                ' Close without saving
                WordDoc.Close wdDoNotSaveChanges
                ' Delete the temp file
                Kill Environ("Temp") & "\" & objAttachment.FileName
            End If
        Next objAttachment
    End If

    ' Display approver names from the Word document
    Dim NamesFromWord As String
    For Each Name In ApproversInWord
        NamesFromWord = NamesFromWord & Name & vbNewLine
    Next Name
    MsgBox "Approvers from Word Document:" & vbNewLine & NamesFromWord

    ' Loop through embedded email attachments, check if "approved" is in the top response and collect sender names
    For Each objAttachment In OlMail.Attachments
        If objAttachment.Type = olEmbeddeditem Then
            ' Save and Open the embedded email
            objAttachment.SaveAsFile Environ("Temp") & "\embeddedMail.msg"
            Set EmbeddedMail = Application.CreateItemFromTemplate(Environ("Temp") & "\embeddedMail.msg")
            
            ' Extract the first few lines of the email
            LineArray = Split(EmbeddedMail.Body, vbNewLine)
            FirstLines = Join(Array(LineArray(0), LineArray(1), LineArray(2)), " ") ' Assuming the response is within the first three lines

            ' Check if the word "approved" is in the top response
            If InStr(1, FirstLines, "approved", vbTextCompare) > 0 Then
                ApproversInMail.Add ExtractName(EmbeddedMail.SenderName)
            End If
        End If
    Next objAttachment

    ' Display approver names from the email attachments
    Dim NamesFromEmail As String
    For Each Name In ApproversInMail
        NamesFromEmail = NamesFromEmail & Name & vbNewLine
    Next Name
    MsgBox "Approvers from Email Attachments:" & vbNewLine & NamesFromEmail

    ' Compare the two lists and generate the validation message
    Dim ValidationMsg As String

    For Each Name In ApproversInWord
        If Not ExistsInCollection(ApproversInMail, Name) Then
            MismatchedNames = MismatchedNames & "Name in Document but not in Email: " & Name & vbNewLine
        End If
    Next Name

    For Each Name In ApproversInMail
        If Not ExistsInCollection(ApproversInWord, Name) Then
            MismatchedNames = MismatchedNames & "Name in Email but not in Document: " & Name & vbNewLine
        End If
    Next Name

    If MismatchedNames = "" Then
        ValidationMsg = "Validation Successful! No mismatches identified." & vbNewLine
    Else
        ValidationMsg = "Validation Failed! Mismatches found:" & vbNewLine & MismatchedNames
    End If

    ValidationMsg = ValidationMsg & "Number of approvers in document: " & ApproversInWord.Count & vbNewLine
    ValidationMsg = ValidationMsg & "Number of approvers in email attachments: " & ApproversInMail.Count

    MsgBox ValidationMsg

    Set OlMail = Nothing
    Set objAttachment = Nothing
    Set EmbeddedMail = Nothing
    Set WordDoc = Nothing
    Set WordApp = Nothing

End Sub

Function ExtractName(fullName As String) As String
    Dim regEx As Object
    Dim matches As Object
    
    Set regEx = CreateObject("VBScript.RegExp")
    With regEx
        .Global = False
        .MultiLine = True
        .IgnoreCase = True
        .Pattern = "^[A-Z,]+"
    End With
    
    Set matches = regEx.Execute(fullName)
    If matches.Count > 0 Then
        ExtractName = matches(0).Value
    Else
        ExtractName = ""
    End If
End Function

Function ExistsInCollection(col As Collection, checkVal As String) As Boolean
    Dim item As Variant
    ExistsInCollection = False
    For Each item In col
        If LCase(item) = LCase(checkVal) Then
            ExistsInCollection = True
            Exit Function
        End If
    Next item
End Function
