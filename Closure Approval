Sub ValidateApprovers()

    Dim OlMail As Outlook.MailItem
    Dim objAttachment As Outlook.Attachment
    Dim WordDoc As Object
    Dim WordApp As Object
    Dim tbl As Object, row As Object
    Dim ApproversInWord As Collection
    Dim EmbeddedMail As Outlook.MailItem
    Dim FirstLines As String
    Dim LineArray() As String
    Dim ValidatedNames As Collection
    Dim ValidationMsg As String
    Dim UnvalidatedNames As String
    Dim approverName As Variant
    Dim NamesInDocument As String
    Dim NamesInMails As String

    ' Initialize collections
    Set ApproversInWord = New Collection
    Set ValidatedNames = New Collection

    ' Get the selected mail
    On Error Resume Next
    Set OlMail = Application.ActiveExplorer.Selection.Item(1)
    On Error GoTo 0

    ' Extract Approvers from Word Attachment
    If Not OlMail Is Nothing Then
        For Each objAttachment In OlMail.Attachments
            If InStr(objAttachment.FileName, ".doc") > 0 Then
                ' Temporarily save the attachment
                objAttachment.SaveAsFile Environ("Temp") & "\" & objAttachment.FileName

                ' Open the Word document
                Set WordApp = GetObject(, "Word.Application")
                If WordApp Is Nothing Then Set WordApp = CreateObject("Word.Application")

                Set WordDoc = WordApp.Documents.Open(Environ("Temp") & "\" & objAttachment.FileName)
                WordApp.Visible = False

                ' Extract approver names
                If WordDoc.Tables.Count >= 3 Then
                    Set tbl = WordDoc.Tables(3)
                    For Each row In tbl.Rows
                        If InStr(row.Cells(5).Range.Text, "X") > 0 Then
                            ApproversInWord.Add Trim(row.Cells(1).Range.Text)
                            NamesInDocument = NamesInDocument & Trim(row.Cells(1).Range.Text) & vbNewLine
                        End If
                    Next row
                End If

                ' Close without saving
                WordDoc.Close wdDoNotSaveChanges
                ' Delete the temp file
                Kill Environ("Temp") & "\" & objAttachment.FileName
            End If
        Next objAttachment
    End If

    ' Display names from the Word document
    MsgBox "Names in the Word document:" & vbNewLine & NamesInDocument

    ' Loop through embedded email attachments and validate sender names
    For Each objAttachment In OlMail.Attachments
        If objAttachment.Type = olEmbeddeditem Then
            ' Save and Open the embedded email
            objAttachment.SaveAsFile Environ("Temp") & "\embeddedMail.msg"
            Set EmbeddedMail = Application.CreateItemFromTemplate(Environ("Temp") & "\embeddedMail.msg")
            
            ' Extract the first few lines of the email
            LineArray = Split(EmbeddedMail.Body, vbNewLine)
            FirstLines = Join(Array(LineArray(0), LineArray(1), LineArray(2)), " ")

            ' Check if "approved" is in the top response and sender name is in the approver list
            If InStr(1, FirstLines, "approved", vbTextCompare) > 0 Then
                If Contains(ApproversInWord, EmbeddedMail.SenderName) Then
                    ValidatedNames.Add EmbeddedMail.SenderName
                    NamesInMails = NamesInMails & EmbeddedMail.SenderName & vbNewLine
                End If
            End If
        End If
    Next objAttachment

    ' Display names from the mails
    MsgBox "Names in the mails:" & vbNewLine & NamesInMails

    ' Check each name for validation and create detailed feedback
    UnvalidatedNames = ""
    For Each approverName In ApproversInWord
        If Not Contains(ValidatedNames, approverName) Then
            UnvalidatedNames = UnvalidatedNames & approverName & vbNewLine
        End If
    Next approverName

    If UnvalidatedNames = "" Then
        ValidationMsg = "All approvers from the Word document have sent approval emails."
    Else
        ValidationMsg = "Mismatch in approvers from Word document and approval emails. Unvalidated names:" & vbNewLine & UnvalidatedNames
    End If

    MsgBox ValidationMsg

    ' Clear objects
    Set OlMail = Nothing
    Set objAttachment = Nothing
    Set EmbeddedMail = Nothing
    Set WordDoc = Nothing
    Set WordApp = Nothing
    Set ApproversInWord = Nothing
    Set ValidatedNames = Nothing

End Sub

' Helper function to check if an item exists in a collection
Function Contains(col As Collection, value As Variant) As Boolean
    Dim item As Variant
    On Error Resume Next
    For Each item In col
        If item = value Then
            Contains = True
            Exit Function
        End If
    Next item
    Contains = False
    On Error GoTo 0
End Function
