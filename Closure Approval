Sub ExtractAndValidateApprovers()

    Dim OlMail As Outlook.MailItem
    Dim objAttachment As Outlook.Attachment
    Dim WordDoc As Object
    Dim WordApp As Object
    Dim tbl As Object, row As Object
    Dim ApproversInWord As Collection
    Dim ApproversInMail As Collection
    Dim regEx As New RegExp
    Dim matches As MatchCollection
    Dim EmbeddedMail As Outlook.MailItem
    Dim FirstLines As String
    Dim LineArray() As String
    Dim NameInDoc As String, NameInMail As String
    Dim MismatchedNames As String

    ' Initialize collections
    Set ApproversInWord = New Collection
    Set ApproversInMail = New Collection

    ' Set up the regular expression for name extraction
    With regEx
        .Global = False
        .MultiLine = True
        .IgnoreCase = True
        .Pattern = "^[A-Z,]+"
    End With

    ' Get the selected mail
    Set OlMail = Application.ActiveExplorer.Selection.Item(1)

    ' Extract Approvers from Word Attachment
    If Not OlMail Is Nothing Then
        For Each objAttachment In OlMail.Attachments
            If InStr(objAttachment.FileName, ".doc") > 0 Then
                ' Temporarily save the attachment
                objAttachment.SaveAsFile Environ("Temp") & "\" & objAttachment.FileName

                ' Open the Word document
                Set WordApp = GetObject(, "Word.Application")
                If WordApp Is Nothing Then Set WordApp = CreateObject("Word.Application")

                Set WordDoc = WordApp.Documents.Open(Environ("Temp") & "\" & objAttachment.FileName)
                WordApp.Visible = False

                If WordDoc.Tables.Count >= 3 Then
                    Set tbl = WordDoc.Tables(3)
                    For Each row In tbl.Rows
                        If InStr(row.Cells(5).Range.Text, "X") > 0 Then
                            Set matches = regEx.Execute(Trim(row.Cells(1).Range.Text))
                            If matches.Count > 0 Then
                                ApproversInWord.Add matches(0).Value
                            End If
                        End If
                    Next row
                End If

                ' Close without saving
                WordDoc.Close wdDoNotSaveChanges
                ' Delete the temp file
                Kill Environ("Temp") & "\" & objAttachment.FileName
            End If
        Next objAttachment
    End If

    ' Display approver names from the Word document
    MsgBox "Approvers from Word Document:" & vbNewLine & Join(ApproversInWord.ToArray, vbNewLine)

    ' Loop through embedded email attachments, check if "approved" is in the top response and collect sender names
    For Each objAttachment In OlMail.Attachments
        If objAttachment.Type = olEmbeddeditem Then
            ' Save and Open the embedded email
            objAttachment.SaveAsFile Environ("Temp") & "\embeddedMail.msg"
            Set EmbeddedMail = Application.CreateItemFromTemplate(Environ("Temp") & "\embeddedMail.msg")
            
            ' Extract the first few lines of the email
            LineArray = Split(EmbeddedMail.Body, vbNewLine)
            FirstLines = Join(Array(LineArray(0), LineArray(1), LineArray(2)), " ") ' Assuming the response is within the first three lines

            ' Check if the word "approved" is in the top response
            If InStr(1, FirstLines, "approved", vbTextCompare) > 0 Then
                Set matches = regEx.Execute(EmbeddedMail.SenderName)
                If matches.Count > 0 Then
                    ApproversInMail.Add matches(0).Value
                End If
            End If
        End If
    Next objAttachment

    ' Display approver names from the email attachments
    MsgBox "Approvers from Email Attachments:" & vbNewLine & Join(ApproversInMail.ToArray, vbNewLine)

    ' Compare the two lists and generate the validation message
    Dim ValidationMsg As String
    Dim Approver As Variant

    For Each Approver In ApproversInWord
        If Not ExistsInCollection(ApproversInMail, Approver) Then
            MismatchedNames = MismatchedNames & "Name in Document but not in Email: " & Approver & vbNewLine
        End If
    Next Approver

    For Each Approver In ApproversInMail
        If Not ExistsInCollection(ApproversInWord, Approver) Then
            MismatchedNames = MismatchedNames & "Name in Email but not in Document: " & Approver & vbNewLine
        End If
    Next Approver

    If MismatchedNames = "" Then
        ValidationMsg = "Validation Successful! No mismatches identified." & vbNewLine
        ValidationMsg = ValidationMsg & "Number of approvers in document: " & ApproversInWord.Count & vbNewLine
        ValidationMsg = ValidationMsg & "Number of approvers in email attachments: " & ApproversInMail.Count
    Else
        ValidationMsg = "Validation Failed! Mismatches found:" & vbNewLine & MismatchedNames & vbNewLine
        ValidationMsg = ValidationMsg & "Number of approvers in document: " & ApproversInWord.Count & vbNewLine
        ValidationMsg = ValidationMsg & "Number of approvers in email attachments: " & ApproversInMail.Count
    End If

    MsgBox ValidationMsg

    Set OlMail = Nothing
    Set objAttachment = Nothing
    Set EmbeddedMail = Nothing
    Set WordDoc = Nothing
    Set WordApp = Nothing

End Sub

Function ExistsInCollection(col As Collection, key As Variant) As Boolean
    On Error GoTo ErrHandler
    ExistsInCollection = Not IsEmpty(col.Item(key))
    Exit Function
ErrHandler:
    ExistsInCollection = False
End Function
