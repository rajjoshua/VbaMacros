import openpyxl

def get_roles_for_step(ws, step):
    row = 2  # skip header row
    roles = []
    while True:
        current_step = ws.cell(row=row, column=1).value
        if current_step is None:
            break  # end of data
        if current_step == step:
            for col in range(3, ws.max_column + 1):
                role_name = ws.cell(row=1, column=col).value
                if ws.cell(row=row, column=col).value == 'Yes':
                    roles.append(role_name)
            break
        row += 1
    return roles

def get_shortest_path(ws, source, target):
    visited = set()
    queue = [[source, []]]
    while queue:
        (current_step, path) = queue.pop(0)
        if current_step == target:
            return path
        if current_step in visited:
            continue
        visited.add(current_step)
        roles = get_roles_for_step(ws, current_step)
        for col in range(2, ws.max_column + 1):
            next_step = ws.cell(row=current_step + 1, column=col).value
            if next_step is not None and ws.cell(row=current_step + 1, column=col).value == 'Yes' and ws.cell(row=1, column=col).value in roles:
                queue.append([next_step, path + [(current_step, ws.cell(row=1, column=col).value)]])
    return None

# Open source workbook and get active worksheet
wb = openpyxl.load_workbook('input.xlsx')
ws = wb.active

# Create output workbook and worksheet
output_wb = openpyxl.Workbook()
output_ws = output_wb.active

# Write output headers
output_ws['A1'] = 'Step Change'
output_ws['B1'] = 'Role'

# Find shortest path from 'Initiated' to 'Completed'
shortest_path = get_shortest_path(ws, 'Initiated', 'Completed')

# Write shortest path to output worksheet
row_num = 2
for step, role in shortest_path:
    output_ws.cell(row=row_num, column=1).value = step
    output_ws.cell(row=row_num, column=2).value = role
    row_num += 1

# Save output workbook
output_wb.save('output.xlsx')
